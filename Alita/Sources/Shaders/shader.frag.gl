
layout(location = 0) in vec3 _WorldNormal;
layout(location = 1) in vec3 _WorldPosition;
layout(location = 2) in vec2 _UV0;

layout(binding = 2) uniform texture2D albedo;
layout(binding = 3) uniform sampler albedo_sampler;

layout(location = 0) out vec4 OutColor;

void main() {
   vec4 diffuse = texture(sampler2D(albedo, albedo_sampler), _UV0);

   vec3 lightDir = normalize(uGlobal.EyePos.xyz - _WorldPosition);
   float specular = clamp(dot(lightDir, normalize(_WorldNormal)), 0, 1);
   vec3 sunColor = specular * uGlobal.SunLightColor.xyz * uGlobal.SunLightColor.a;

   OutColor = vec4(sunColor * diffuse.xyz, 1.0);
}
