
layout(location = 0) in vec2 _UV0;

layout(binding = 11) uniform texture2D   tGDiffuse;
layout(binding = 12) uniform sampler     sGDiffuse;
layout(binding = 13) uniform texture2D   tGNormal;
layout(binding = 14) uniform sampler     sGNormal;
layout(binding = 15) uniform texture2D   tGPosition;
layout(binding = 16) uniform sampler     sGPosition;
layout(binding = 17) uniform texture2D   tGMaterial;
layout(binding = 18) uniform sampler     sGMaterial;

layout(location = 0) out vec4 OutColor;

void TShading() {
    //OutColor = texture(sampler2D(tGPosition, sGDiffuse), _UV0);

    vec3 diffuse = texture(sampler2D(tGDiffuse, sGDiffuse), _UV0).xyz;

    vec3 _WorldPosition = texture(sampler2D(tGPosition, sGPosition), _UV0).xyz;
    vec3 _WorldNormal = (texture(sampler2D(tGNormal, sGNormal), _UV0).xyz - 0.5) * 2.0;

    vec3 lightDir = normalize(uGlobal.EyePos.xyz - _WorldPosition);
    float specular = clamp(dot(lightDir, normalize(_WorldNormal)), 0, 1);
    diffuse.xyz *= specular * uGlobal.SunLightColor.xyz * uGlobal.SunLightColor.a;

    OutColor = vec4(diffuse, 1.0);
}