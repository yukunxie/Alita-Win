#version 450
#extension GL_ARB_separate_shader_objects : enable
#extension GL_ARB_shading_language_450pack : enable

layout(location = 0) in vec3 inPosition;
layout(location = 1) in vec3 inNormal;
layout(location = 2) in vec2 inTexCoord;

layout(binding = 0) uniform Global
{
    vec4 EyePos; // camera's world position
    vec4 SunLight; // xyz direction
    vec4 SunLightColor; // rgb as color, and a as intensity

    mat4 ViewMatrix;
    mat4 ProjMatrix;
    
} uGlobal;

layout(binding = 1) uniform Batch {
    mat4 WorldMatrix;
} uBatch;

layout(location = 0) out vec3 _WorldNormal;
layout(location = 1) out vec3 _WorldPosition;
layout(location = 2) out vec2 _UV0;

void main() {
    gl_Position = uGlobal.ProjMatrix * uGlobal.ViewMatrix * uBatch.WorldMatrix * vec4(inPosition, 1.0);
    _WorldNormal = inNormal;
    _WorldPosition = (uBatch.WorldMatrix * vec4(inPosition, 1.0)).xyz;
    _UV0  = inTexCoord;
}
